;;; Automatically generated on Thu May 17 19:27:11 2012
;;; Invoked by LooChao@dynamic-oit-vapornet-a-2808.princeton.edu using 23.3.1
(setq-default session-file-alist '(("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-elisp.el" 1727 1727 1 nil nil 1727 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-env.el" 4655 nil 1 nil nil 4655 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/twittering-mode.el" 137896 1 1 nil nil 137896 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-dired.el" 2457 2393 1 nil nil 2457 (overwrite-mode))))
(setq-default file-name-history '("~/Dropbox/.emacs.d/var/.bm-repository" "~/Dropbox/.emacs.d/rc/lch-binding.el" "~/Dropbox/.emacs.d/rc/lch-env.el" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/var/emacs-bmk" "~/Dropbox/.emacs.d/site-lisp/twittering-mode.el" "~/Dropbox/Org/org/Refile.org" "~/.w3m/bookmark.html" "~/Dropbox/.emacs.d/rc/lch-web.el" "/Volumes/DATA/Dropbox/.emacs.d/library/dotfiles/_bashrc" "/Volumes/DATA/Temperary/test" "~/Dropbox/.emacs.d/rc/lch-org.el" "~/Temporary/hello.pl" "~/Dropbox/Org/org/Pearl.org" "~/Dropbox/.emacs.d/rc/lch-el-get.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/rc/lch-dired.el" "~/.emacs" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-elisp.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-el-get.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/LIB/LIB_INBOX/LIBRARY_INBOX/TOSORT/Video/Course/Contents.org" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/Exercise_Files/06_Loops/loops.pl" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/Exercise_Files/07_Special_Variables/specials.pl" "~/.wine/dosdevices/z:/Users/LooChao/Downloads/Exercise_Files/06_Loops/postfix.pl" "/Users/LooChao/Downloads/Exercise Files/06 Loops/Loops/loops.pl" "/Users/LooChao/Temporary/hello.pl" "/Users/LooChao/Temporary/hello.py" "~/Dropbox/Org/org/norang-org-mode.org" "~/Dropbox/Org/org/index.org" "~/Dropbox/Org/org/iTHU.org" "~/Dropbox/Org/org/iStuff.org" "~/Dropbox/Org/org/iResearch.org" "~/Dropbox/Org/org/iPU.org"))
(setq-default search-ring '("te" "hs" "bind" ".emacs.d" "caution" "w3m" "wory" "desktop" "publsih" "publish" "org-pub" "pub-" "org" "emacs-dir" "window" "auctex"))
(setq-default regexp-search-ring '("lch-" "lch" "f9" "twittering-update-stat" "eval-" "dired" "update-status-inter" "update-status" "twittering-update" "tw" "histsiz" "usl" "lifeti" "todo"))
(setq-default buffer-name-history '("lch-elisp.el" ":home@sina" "*twittering-edit*" "*Help*" "杀生丸之眼@sina" "*EMMS Playlist*" "*Bookmark List*" "*w3m*" "*w3m*<2>" " *Minibuf-1*" "twittering-mode.el" "*scratch*" "*Backtrace*" "lch-dired.el" "咱们去旅游@sina" "王珞丹@sina" "lch-binding.el" ":home@twitter" "Contents.org" "*Ibuffer*" "hello.pl" "*shell*" "hello.py"))
(setq-default coding-system-history '("gbk" "utf-8" "utf-16" "big5" "gb18030"))
(setq-default command-history '((switch-to-buffer "lch-elisp.el") (query-replace "M-9" "M-8" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (switch-to-buffer ":home@sina") (kill-buffer "*twittering-edit*") (kill-buffer "lch-elisp.el") (kill-buffer "*Help*") (switch-to-buffer "杀生丸之眼@sina") (kill-buffer "*EMMS Playlist*") (switch-to-buffer "*EMMS Playlist*") (kill-buffer ":home@sina") (kill-buffer "*Bookmark List*") (kill-buffer "*w3m*") (kill-buffer "*w3m*<2>") (w3m-goto-url "http://www.emacswiki.org/" nil (quote utf-8)) (kill-buffer " *Minibuf-1*") (kill-buffer "twittering-mode.el") (switch-to-buffer "twittering-mode.el") (lch-twittering-update-status-interactive) (describe-variable (quote twittering-current-timeline-spec-string)) (twittering-current-timeline) (lch-twittering-update-status-interactive nil) (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <F9> <F9>") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <F9 F9>") (switch-to-buffer "*scratch*") (kill-buffer "*Backtrace*") (kill-buffer "lch-dired.el") (switch-to-buffer "lch-dired.el") (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/lch-elisp.el") (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/lch-el-get.el") (switch-to-buffer "咱们去旅游@sina")))
(setq-default evil-ex-history '("w" "q!" "q"))
(setq-default extended-command-history '("eshell"))
(setq-default face-name-history '("default"))
(setq-default grep-find-history '("find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <F9> <F9>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <F9 F9>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e flag" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e browse-url-at-point" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e aquamacs-set-defaults" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e aqua-set-defaults" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e lch-mac-p" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e data-directory" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e tabbar" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e matlab" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e cleanup" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e root" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e sudo" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e recentf" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 28 APR" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e September" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e file" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e hd2" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e Future" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e future" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e bibli" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e lib" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e levich" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e google" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e plot" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e terminal" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e vec" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e eldoc" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e info" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e viper"))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default ido-buffer-history '("tw" "he" "fix" "de" "s" "si" "org-sty" "bin" "*me" "cor" "lch"))
(setq-default ido-file-history '("lch-eli" "lch-el" "hello.pl" "hello.py" "test" "Readme_LCH.txt" "backward" "grep.txt" "terminal.sh" "t" "test.sh" "finder.sh" "re" "Ema" "Docu" "Appli" "/A" "fix" "site-lisp/" ".emacs.d/" "Dropbox/." "~/" "Makefile" "INBOX_CHG" "res" "1.c" "lch1.py" "lch-calls2.py" "lch-calls1.py" "04_Syntax"))
(setq-default minibuffer-history '("weibo-timeline" "369107" "840426@Lc" "lch" "twittering-current-timeline-spec-string" "twitter-curr" "lch-twitt" "lch-twit" "twittering-cu" "l" "lch-tw" "145669" "twttering-re" "twittering-update-status-i" "114520" "twit" "3431947" "org" "sh-mod" "data structure cheatsheet" "define-key" "emacs w3m toolbar background" "loochao" "w3m-next-image" "test" "org-mode" "org-ver" "fill-c" "org-v" "org-mode-version"))
(setq-default org-read-date-history '("19:00    " "   " "+5d 17:00    " "2012-1-17 7:45    " "2012-01-17    " "+7    " "17:00-19:00    "))
(setq-default org-tags-history '("#B"))
(setq-default query-replace-history '("M-8" "M-9" "/" "\\" "lch" "prelude" ")" "）" "(" "（" "Red" "Green" "10)" "6)" "10" "6" "semilogy" "plot" "test" "[1-9]" "lch_python" "example" "" "　　" " " "2" "1" "=" "\\approx" "(lch-modeline) (message"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("pwd"))
(setq-default smex-history '(cd lm 5x5 afm arp dbx dig))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default twittering-edit-history '("下回记得换Chrome图标" "555要出去开会, 口语还是那么烂" "累累, 眼睛疼. 马上要开会了也还没搞ppt呢. CX那个小没良心的也不理我, 这回要搬家, 她们也没人管我, 还挺伤心的. 有什么了不起的." "七种武器: D700+A001+35/1.4: 有了它便可留住整个世界. Yamaha 3300: 有了它便有了通向音乐世界的大门. PX200: 大爱的耳机. Sony D50: 有了它便可录下一切的声音. WD Disk: 4T, 有了它便可存下所有." "七种武器: MBP: 电脑是最核心的, 不表. iPhone: 有了它, 便有了随身电脑. Camry: 有了它便有了腿. Kindle: 有了它便可以专心看小说. iPad: 有了它便有了小平板电脑. iPod Classic: 有了它便有了便携的音乐库.  " "好软件: Papers: 有了它便能做科研Wine:   有了它便有了Mac下的Total commander iTunes: 有了它便有了一个强大的音乐软件库. Emacs:  有了它便有了一切." "牛逼软件Macbook, 这个不是软件. MBP像艺术品一样精致. Mac是Unix和Windows的合体, 既有PC对硬件的良好支持, 又有Unix powerful towers. Macports, 有了它便有了Unix Bibdesk, 有了它便有了库. " "当然入库时要用Bibdesk整理下." "Final Box: 都是整理成LaTeX文档, 入Dropbox之Library." "INBOX4: 纸笔, 需要仔细写一遍的, 不适合录入到Org的." "INBOX3: iPhone efinge pro 适合外出没有纸笔的情况" "INBOX2: Emacs+Org-mode 自己的iDea啦, 要做的事啦, 还有分类好的信息." "INBOX1: Evernote, 浏览网页时的." "关于记笔记有几个INBOX" "然后各个优先级列表不过只是参考, 其实当某天下午, 你非想做件C, 比如学会C++也是可以的. 但尽量不要有那种不符合规矩的情况出现." "然后最后C的生机在于Holiday时, 比如周六周日, 或是劳动节, T1为CARB" "然后是T31换成了RABC, 故先做每天要做的事. 比如背词, 再比如摸摸琴, 球啥的. 最后T32切回ARBC接着做事情." "来走一遍一天之流程: 早上睡到10点, 比如. 起来优先级是ARBC, 所以挑一项最重要的事. 做到中午12 点. 吃饭, T21的优先级是BARC, 故尽量挑个B来做, 不过要是有很重要的A也可以现在接着做. 然后到了两点, T22切回ARBC. 不表. " "选定了一定要做完这一项, 保证有始有终, 保证你做选择时的定力可以被执行下去." "再加上MACK, Mobile, Audio, Car和Kindle, 体系为相当之完美了." "不对, 那还是T31之结束吧." "关于Mapping, 有一条Rule是非常Rigid的, 即定了一件事以后, 一定要完成, 或是耗尽当个时间段的所有时间方可以. 比如, T31, 选了Recur的背新概念3一课一项, 就一定要背完那一课. 要是背不完就背到T3之结束. 注意不是T31之结束, 而是T3." "然后就是Mapping, 具体的原则是T1 T2 T32优先级是A R B C, T31是R A B C, T21是B A R C(这一项再议) 不过这个是灵活的, 不规定死的, 可以根据情况变化的. 比如突然要出去听个讲座去就是了. 也就是说以上的原则不是rigid的. " "然后是事情的分类, A B C R A: 不做就会死的, 最重要的事情. B: 不做会很不爽的. C: 可做可不做的, 但可能是很感兴趣的. R: 应该每天做, 重复做的. R的优先级介于A和B之前的, 因为它是长期的, 所以偶尔一天不做也不会影响全局, 但不可长期不做." "T3又有个限, 6点到9点T31, 9点到睡觉是T32" "重来. 时间分三段, 自然醒或是不得不醒到12点, 12点到6点, 6点到晚上睡觉. T1 T2 T3" "然后是Mapping 没有特殊情况, 要按优先级来Map, 如果有A的话, 就不能Map别的. R的话也是每天要做完的, 所以单独安排时间段: R11 (R12)可选R21 R22 R23 可选每一个小节半小时过了下午两点和晚上9点, R不再执行, 转回T" "然后优先级分几种, A B C R A是最重要的, 不做就会死的B是不做会很不爽的C是可做可不做R是经常会重复的" "新的耳机到了, 真爽" "分三个时段, T1 T2 T3" "OK 时间管理" "It's so cool" "test again does it work?" "test" "还是不行么" "得记得问问xwl为啥自己define的函数不行, 不过现在没有时间再搞这些了" "为啥又行了呢" "为啥不行呢" "不能发中文么" "不能发中文么 fuck" "\"不能发中文么\"" "嘿嘿爽到了. M-9 M-9直接可以发微博, 赞, 要时时刻刻生活在Emacs中啊" "如果从新浪微博导出" "有时间要再看看如果改twittering-mode的源码" "M-9 M-9设成发新浪微博了" "眼睛疼55" "为啥有时行, 有时不行呢" "Twittering mode还挺好用的."))
(setq-default twittering-search-history '("emacs" "#emacs"))
(setq-default twittering-timeline-history '(":home@sina" "杀生丸之眼@sina" "咱们去旅游@sina" "王珞丹@sina" ":home@twitter"))
(setq-default viper-ex-history '("q" "exit"))
(setq-default w3m-bookmark-section-history '("test"))
(setq-default w3m-bookmark-title-history '("EmacsWiki: Site Map"))
(setq-default w3m-input-url-history '("http://www.emacswiki.org/" "http://www.emacswiki.org/emacs/emacs-w3m#toc21" "http://blog.renren.com/share/253714224/12934830830?from=0101010202&ref=hotnewsfeed&sfet=102&fin=3&ff_id=253714224" "http://www.emacswiki.org/emacs/HowToNavigate" "http://www.princeton.edu/~chaol" "www.tsinghua.edu.cn" "http://reference.wolfram.com/mathematica/howto/MapAFunctionOverAList.html" "http://www.emacswiki.org" "www.google.com" "http://dnquark.com/blog/2012/02/emacs-evil-ecumenicalism/" "https://github.com/alpaker/Fill-Column-Indicator" "http://www.emacswiki.org/emacs/TwitteringMode" "http://www.emacswiki.org/emacs/Twitter" "http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/" "http://gnuvince.wordpress.com/2012/02/19/why-i-still-use-emacs/" "http://www.xiami.com/group/searchingroup/id/46/page/2?key=%E6%8E%A8%E8%8D%90" "http://xahlee.org/emacs/elisp_library_system.html" "http://www.emacswiki.org/emacs/ElispCookbook#toc41" "http://www.rattlesnake.com/intro/Files-List.html" "http://www.cs.cmu.edu/cgi-bin/info2www?%28elisp%29Contents%20of%20Directories" "http://elephantliu.blog.51cto.com/1107116/606105" "http://hi.baidu.com/mrli868/blog/item/e64c8fa45601d4f89052ee5d.html" "http://forum.xda-developers.com/showthread.php?t=1209474" "http://forum.xda-developers.com/showpost.php?p=11417869" #("www.renren.com" 3 4 (rear-nonsticky t) 10 11 (rear-nonsticky t)) "http://www.emacswiki.org/emacs/AquamacsFAQ" "http://www.emacswiki.org/emacs/AquamacsEmacs#toc1" "google.com" "http://www.google.com/search?q=test"))
