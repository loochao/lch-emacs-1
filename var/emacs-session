;;; Automatically generated on Tue Aug 16 03:30:54 2011
;;; Invoked by LooChao@dynamic-oit-vapornet-c-3363.princeton.edu using 23.3.1
(setq-default kill-ring '(#("SlateBlue" 0 9 (fontified t face font-lock-string-face)) #("pp^L-highlight" 0 14 (fontified t face font-lock-variable-name-face)) #("bm-persistent-face" 0 2 (fontified t) 2 13 (fontified t) 13 14 (fontified t) 14 18 (fontified t)) #("(set-face-attribute 'bm-persistent-face nil :background \"SlateBlue\")" 5 9 (font-lock-face match) 35 39 (font-lock-face match)) "(setq tex-mode-hook 'turn-on-auto-fill)" #("
" 0 1 (fontified t)) " (require 'pp-c-l)
 (setq pp^L-^L-string
       \"                                                           \")
 (pretty-control-l-mode 1)" #("org             private_html    privateiPrv.org public_html     template        tmp             var
dynamic-oit-vapornet-c-3363:~/Dropbox/Org$ " 0 100 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky \.\.\. fontified t) 100 143 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky \.\.\. face font-lock-string-face fontified t))))
(setq-default file-name-history '("~/Dropbox/.emacs.d/rc/lch-init.el" "~/Dropbox/.emacs.d/var/emacs-bmk" "~/Dropbox/.emacs.d/rc/" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/site-lisp/pp-c-l.el" "/Users/LooChao/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/rc/lch-emms.el" "~/Dropbox/.emacs.d/var/.bm-repository" "~/Dropbox/Org/privateiPrv.org" "~/Dropbox/Org/org/iLog.org" "~/Dropbox/Org/org/Life.org" "~/Dropbox/Org/org/iPrv.org" "/Users/LooChao/Dropbox/Org/org/iPU.org" "~/Dropbox/.emacs.d/rc/lch-inbox.elc" "~/Dropbox/.emacs.d/rc/lch-env.el" "~/Dropbox/.emacs.d/rc/dotEmacs~" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-web.el" "/Volumes/DATA/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Dropbox/.emacs.d/var/emacs-bmk" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-outline.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-conf.el" "/Volumes/DATA/Dropbox/Org/org/iDea.org" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-binding.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-custom.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-env.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-elisp.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-theory/chapter-theory.tex" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-theory/chapter-theory-inbox.tex"))
(setq-default search-ring '("\\cite" "install-el:" "mkin" "install:" "install" "build" "tar" "hist" "C-0" "thesis" "lisp-" "--with" "captur" "g" "dire" "emacs"))
(setq-default regexp-search-ring '("pp^L-highlight" "pp-" "Volu" "outline-vis" "outline" "tex" "sears" "617" "8" "2^3P" "2^3	" "gamma_{tot" "i\\." "off-d" "sim" "matt"))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates . extended-command-history) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-file-name anything-c-match-on-directory-name) (type . file)))
(setq-default bookmark-history '("leisureread" "PUFiles" "Research" "REPO" "Dropbox" "EmacsD"))
(setq-default buffer-name-history '("lch-elisp.el" "pp-c-l.el" "*Messages*" "*shell*" "lch-inbox.elc" "chapter-theory-inbox.tex" "lch-outline.el" "iDea.org" "chapter-theory.tex" "*Help*" "lch-conf.el" "lch-binding.el" "rc" "*scratch*" "Google\270\261\327\334\262\303\300\356\277\252\270\264\316\344\264\363\276\253\262\312\321\335\275\262.txt" "\276\255\265\344.txt" "\314\357\271\372\307\277\267\303\314\270\302\274,\272\334\323\320\306\364\267\242\322\342\322\345.html" "advice_for_computer.TXT" "advice" "060619_SMTH-Entrepreneur_\263\254\274\266\270\273\272\300\341\333\267\345\263\311\271\246\321\247\305\340\321\265\277\316\263\314\261\312\274\307\325\252\322\252zz" "Notes.txt" "020_Harvard_Classics_djvu.txt.html" "English" "readme.txt" "shui.jpg"))
(setq-default coding-system-history '("gb18030" "gbk" "utf-8" "nil"))
(setq-default command-history '((switch-to-buffer "lch-elisp.el") (switch-to-buffer "pp-c-l.el") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e face") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e auto-fill") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e fill") (query-replace "=" "-" nil (if ... ...) (if ... ...)) (byte-recompile-directory "~/Dropbox/.emacs.d/rc/" 0) (byte-recompile-directory "~/Dropbox/.emacs.d/rc/" nil) (kill-buffer "*Messages*") (switch-to-buffer "*Messages*") (query-replace " " "=" nil (if ... ...) (if ... ...)) (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/dotEmacs") (dired-mark-files-regexp ".*\\.elc" nil) (dired-mark-files-regexp "*.elc" nil) (kill-buffer "*shell*") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e private") (find-file "/Users/LooChao/Dropbox/Org/org/iPU.org") (kill-buffer "lch-inbox.elc") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e Volumes") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e volume") (query-replace "<f2>" "p" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (query-replace "<f1>" "o" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (switch-to-buffer "chapter-theory-inbox.tex") (switch-to-buffer "lch-outline.el") (kill-buffer "iDea.org") (switch-to-buffer "iDea.org") (query-replace "global-map" "outline-minor-mode-map" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (query-replace "global-map" "outline-mode-map" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (query-replace "global-set-key" "define-key global-map" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.))))
(setq-default dired-regexp-history '(".*\\.elc" "*.elc" ".*" "*" ".*LCH.*"))
(setq-default dired-shell-command-history '("firefox" "chmod a-x" "chmod 755" "chmod 644" "gunzip -qc * | tar xvf -"))
(setq-default extended-command-history '("lisp-mode" "customize-face" "el-get-update-all" "el-get-init" "el-get-update" "print-buffer" "pretty-control-l-mode" "find-dired" "eshell"))
(setq-default face-name-history '("default"))
(setq-default find-file-root-history '("~/Dropbox/.emacs.d/rc/lch-org.el" "~/Dropbox/.emacs.d/rc/lch-mac.el" "~/Dropbox/.emacs.d/rc/lch-aquamacs.el"))
(setq-default grep-find-history '("find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e face" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e auto-fill" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e fill" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e private" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e Volumes" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e volume" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-o" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e outline" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-." "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e leisure" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e green" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e eldoc" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e time" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e world" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e ivan-keymap-define" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e f7" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e goto-char" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e last-change" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e M-1" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f6> <f6>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e aqua" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e scroll" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e hippie" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e match-paren" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f7> <f7>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e manfnt.sty" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e spell" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e other-window" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e \\cite" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e figure"))
(setq-default gud-gud-gdb-history '("gdb --fullname hello"))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default hi-lock-regexp-history '("^(global-set-key .*)"))
(setq-default ido-buffer-history '("pp-" "*me" "i" "thro" "eli" "elis" "th" "the" "shee" "fc" "cheat" "sour" "che" "w3m" "bm" "elisp" "lch" "we" "w" "en" "web" "intro" "cpa" "lib" "bib" "bi" "in" "intr" "{org | lch-org.el | *Messages* | *Shell Command Output* | *Compile-Log* | iDD.org}"))
(setq-default ido-file-history '("pu" "org" "lch-outline.el" "l" "edu" "dro" "def" "harpoon.sty" "va" ".b" "v" "bm.el" "loochao-emacs-cheat-sheet.tex" "lib" ".em" "ma" "cho" "test.html" "iDD.org" "eli" "rc/" "_b" "do" "li" "~/" "ev" "set" ".bashrc" "M" "bird2.sh"))
(setq-default kmacro-ring '(("" 0 "%d") ([1 tab 35 14 16 32 14] 0 "%d") ([tab 35 32 14] 0 "%d") ("\343-" 0 "%d")))
(setq-default matlab-shell-save-and-go-history '("()"))
(setq-default minibuffer-history '("bookma" "byte-re" "byte" "latex" "org-mod" "outline-minor-mode-prefix" "lat" "org-mo" "l" "eval-re" "outline-min" "do" "re" "dos" "uni" "revert-bu" "fil" "fill" "\262\311\323\303" "\326\301\323\332" "book" "bookmark-default-file" "features" "re-bui" "w3m-nex" "list-colo" "rainbo" "bm-to" "search" "dirtr"))
(setq-default org-read-date-history '("+1    " "+5    " "18:00    " "+3 18:00    " "2011-09-02 - 2011-09-04    " "+2 11:30-13:30    " "+2 17:30    " "+2 11:30    " "  2011-07-11    " "   " "+30    " "12:00    " "-1 14:00 +1w    " "+2 18:00    " "+1 18:00    " "+4    " "05-18 16:30    " "05-19 13:30    " "12:00-18:00    "))
(setq-default org-refile-history '(#("IDEA (iDea.org)" 0 4 (fontified nil)) #("ComputerSE" 0 10 (fontified t face org-level-2 org-category #("TODO-#B" 0 7 ...))) #("IDEA (iDea.org)" 0 4 (fontified t face org-level-2)) #("OBTAINs" 0 7 (fontified t face org-level-2 org-category #("TODO-#B" 0 7 ...))) #("IDEAs (iDea.org)" 0 5 (fontified t face org-level-1 org-category "iDea"))))
(setq-default org-tags-history '("OBTAIN" ":#B:Emacs:" "#A"))
(setq-default query-replace-history '("-" "=" " " "p" "<f2>" "o" "<f1>" "outline-minor-mode-map" "global-map" "outline-mode-map" "define-key global-map" "global-set-key" ";->" ";>>>" " \\times " "*" "nu" "gamma" "overrightharp" "vec" "\\overrightharp" "\\vec" "\\overrighharp" "2" "1" "M-2" "M-1" "w3m" "firefox"))
(setq-default read-expression-history '("wq"))
(setq-default regexp-history '("^(global-set-key .*)"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("wc" "sed -e 's/smex/test/g' < >" "sed -e 's/smex/test/g'" "pwd"))
(setq-default smex-history '(byte-recompile-directory cd lm 5x5 afm arp dbx))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default w3m-input-url-history '("http://www.emacswiki.org/emacs/OutlineMinorMode" "http://www.harvard.edu" "www.princeton.edu" "http://www.princeton.edu" "www.tsinghua.edu.cn" "http://www.emacswiki.org/" "http://www.emacswiki.org/emacs/BookmarkPlus" "http://www.emacswiki.org/cgi-bin/wiki/FlashCard" "http://www.emacswiki.org/emacs/ShellDirtrackByPrompt" "http://www.acoustics.hut.fi/u/mairas/UltimateLatexMakefile/Makefile" "http://www.andy-roberts.net/writing/latex/bibliographies" "http://www.gnu.org/software/emacs/manual/html_node/emacs/Outline-Mode.html#Outline-Mode" "http://www.metalshell.com/source_code/27/Binary_Read_Write.html" "http://www.ibiblio.org/pub/languages/fortran/append-c.html" "http://www.masteringemacs.org/" "http://emacser.com/ann77/Emacs/EmacsElispHistory.html" "http://emacser.com/ann77/Emacs/EmacsDiredOpenFileByType.html" "http://www.newsmth.net/bbsanc.php?path=%2Fgroups%2Fcomp.faq%2FEmacs%2Felisp%2Fpackage%2FM.1151312293.F0" "http://www.cs.cmu.edu/cgi-bin/info2www?%28emacs%29Minor%20Modes" "http://www.emacswiki.org/emacs/ViewMode" "http://www.emacswiki.org/emacs/GraphicalBookmarkJump" "http://web.student.tuwien.ac.at/~e0225855/misc/openwith.el" "http://www.emacswiki.org/emacs/ShellMode" "www.tsinghua.edu" "http://www.emacswiki.org/emacs/SiteMap" "http://www.princeton.edu/~chaol" "http://www.cs.princeton.edu/courses/archive/spr11/cos333/lectures/02langs/" "file:///Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Temporary/xah_emacs_tutorial/emacs/elisp_process_lines.html" "http://freeworld.thc.org/papers/COVER-1.TXT" "http://www.emacswiki.org/emacs/OneKey"))
(set-register 97 "bd \"C-x f\") 'find-file-at-point)")
