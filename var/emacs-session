;;; Automatically generated on Wed Aug 10 15:48:42 2011
;;; Invoked by LooChao@dynamic-oit-vapornet-c-3363.princeton.edu using 23.3.1
(setq-default kill-ring '(#("
" 0 1 (fontified t)) #(";+    (let ((decorated-lines" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 28 (fontified t face font-lock-comment-face)) #(";+(defun leisureread-decorate-lines (text)
;+  (concat comment-start \"+\"))
;+(defun leisureread-line-prefix ()
;+      (bury-buffer))))
;+      (bookmark-jump *leisureread-bookmark-name*)
;+      (find-file *leisureread-my-book-path*)
;+    (save-excursion
;+  (when (not (get-file-buffer *leisureread-my-book-path*))
;+    (save-excursion
;+      (find-file *leisureread-my-book-path*)
;+      (bookmark-jump *leisureread-bookmark-name*)
;+      (bury-buffer))))
;+(defun leisureread-line-prefix ()
;+  (concat comment-start \"+\"))
;+(defun leisureread-decorate-lines (text)
;+  (let ((lines (split-string text \"\\n\")))
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-delimiter-face fontified t) 44 75 (face font-lock-comment-face fontified t) 75 76 (face font-lock-comment-delimiter-face fontified t) 76 111 (face font-lock-comment-face fontified t) 111 112 (face font-lock-comment-delimiter-face fontified t) 112 136 (face font-lock-comment-face fontified t) 136 137 (face font-lock-comment-delimiter-face fontified t) 137 188 (face font-lock-comment-face fontified t) 188 189 (face font-lock-comment-delimiter-face fontified t) 189 235 (face font-lock-comment-face fontified t) 235 236 (face font-lock-comment-delimiter-face fontified t) 236 257 (face font-lock-comment-face fontified t) 257 258 (face font-lock-comment-delimiter-face fontified t) 258 318 (face font-lock-comment-face fontified t) 318 319 (face font-lock-comment-delimiter-face fontified t) 319 340 (face font-lock-comment-face fontified t) 340 341 (face font-lock-comment-delimiter-face fontified t) 341 387 (face font-lock-comment-face fontified t) 387 388 (face font-lock-comment-delimiter-face fontified t) 388 439 (face font-lock-comment-face fontified t) 439 440 (face font-lock-comment-delimiter-face fontified t) 440 464 (face font-lock-comment-face fontified t) 464 465 (face font-lock-comment-delimiter-face fontified t) 465 500 (face font-lock-comment-face fontified t) 500 501 (face font-lock-comment-delimiter-face fontified t) 501 532 (face font-lock-comment-face fontified t) 532 533 (face font-lock-comment-delimiter-face fontified t) 533 575 (face font-lock-comment-face fontified t) 575 576 (face font-lock-comment-delimiter-face fontified t) 576 619 (face font-lock-comment-face fontified t)) #(";+    (let ((decorated-lines
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 28 (fontified t face font-lock-comment-face) 28 29 (fontified t))))
(setq-default session-file-alist '(("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/leisureread/leisureread.el" 442 2605 1 nil nil 2605 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-binding.el" 18565 18493 1 nil nil 18565 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-elisp.el" 276 101 1 nil nil 276 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/doc/loochao-emacs-cheat-sheet.tex" 5379 5337 1 nil nil 5377 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/bm.el" 14103 14079 1 nil nil 14103 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/flashcard/fc.el" 4981 4920 1 nil nil 4981 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-experiment/chapter-experiment.tex" 1 1 1 nil nil nil (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-pgm.el" 273 225 1 nil nil 273 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-lisp.el" 476 476 1 nil nil 476 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-web.el" 5332 4417 1 nil nil 5332 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-w3m.el" 2211 2211 1 nil nil 2211 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-env.el" 3880 3815 1 nil nil 3880 (overwrite-mode)) ("~/.bm-repository" 302 nil 1 nil nil 303 (overwrite-mode)) ("~/Downloads/bookmark+/bookmark+.el" 1415 nil 1 nil nil 5396 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-dict.el" 1148 1136 1 nil nil 1141 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-keymap.el" 4452 nil 1 nil nil 1963 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-util.el" 12563 12299 1 nil nil 12330 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Org/org/iDea.org" 241 nil 1 nil nil 265 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/evilchelu/evilchelu_dotfiles.lch/bin/aliases" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/evilchelu/evilchelu_dotfiles.lch/bin/chelu/topcommands" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-theory/chapter-theory.tex" 3725 7510 1 nil nil 7510 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-intro/ch-intro-temp.tex" 7753 6770 1 nil nil 23506 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-conclusion/chapter-conclusion.tex" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Org/org/iPrv.org" 18339 1 1 nil nil 18463 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/doc/Makefile" 20 nil 1 nil nil 20 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/mislav/mislav_dotfiles.lch/bashrc" 286 nil 1 nil nil 747 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/mwolson/w3m-init.el" 1915 nil 1 nil nil 1915 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-aqua-custom.el" 1872 nil 1 nil nil 1871 (overwrite-mode)) ("/Volumes/LIBPT/LIBRARY_INBOX/Foreign/Language/English/Verbal/刘毅(A)/10000/刘毅词汇10000.txt" 5956 5678 1 nil nil 6030 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Org/org/iLog.org" 8364 3544 1 nil nil 8448 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-intro/chapter-intro.tex" 12219 11347 1 nil nil 12219 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/lch-pums-thesis.bib" 236 208 1 nil nil 236 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-org.el" 8838 8838 1 nil nil 8838 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Org/org/Refile.org" 30 nil 1 nil nil 39 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-inbox.el" 998 999 1 nil nil 998 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Org/org/Pearl.org" 283 288 1 nil nil 313 (overwrite-mode)) ("/Volumes/LIBPT/BACKUP/Macbook/110612_WindowsXP.winclone/ntfsresize" 2 nil 1 nil nil 2 (overwrite-mode)) ("/Volumes/LIBPT/BACKUP/Macbook/110612_WindowsXP.winclone/winclone.perl" 22028 nil 1 nil nil 22028 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Library/Library.bib" 730 201 1 nil nil 730 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Org/org/iDD.org" 304 366 1 nil nil 304 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/library/dotfiles/_bashrc" 4172 2998 1 nil nil 4172 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Temporary/emacs-evernote-mode-read-only/evernote-mode.el" 1710 1200 1 nil nil 67388 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Programming/Bash/bird2.sh" 108 99 1 nil nil 108 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/library/dotfiles/Examples/COS217/_bashrc" 441 65 1 nil nil 1339 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/org-7.7/Makefile" 13297 nil 1 nil nil 1109 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/library/dotfiles/_profile" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/thesis-notes.org" 132 837 1 nil nil 149 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-intro/ch-intro-inbox.tex" 179 292 1 nil nil 179 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-theory/chapter-theory-inbox.tex" 210 4034 1 nil nil 210 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-conclusion/conclusion.tex" 20 1 1 nil nil 20 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-conclusion/futurework.tex" 23 1 1 nil nil 23 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/abstract.tex" 1 1 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/acknowledgements.tex" 1 1 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-experiment/chapter-experiment-inbox.tex" 42 1 1 nil nil 42 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/thesis-notes-temp.org" 108 108 1 nil nil 108 (overwrite-mode)) ("~/Downloads/Untitled2.bib" 201 nil 1 nil nil 197 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/Symbols.tex" 69 1 1 nil nil 69 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU_Master_Thesis_template.only/ch-pastwork/topic1.tex" 647 388 1 nil nil 647 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/lch-pums-thesis.tex" 1471 1444 1 nil nil 1471 (overwrite-mode)) ("/Volumes/DATA/Library_ToCheckIN/LatexPPT/Vesion2.0/Readme.txt" 1056 1 1 nil nil 1057 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/tex/sandbox/titlesec.sty" 32318 1 1 nil nil 32294 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/tex/sandbox/xtex.tex" 92 117 1 nil nil 92 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.lib/tex/sandbox/xtex2.tex" 1189 1 1 nil nil 1174 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Org/org/iStuff.org" 8120 6936 1 nil nil 8120 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.vimperator.d/README" 35 nil 1 nil nil 36 (overwrite-mode)) ("~/.wine/drive_c/users/LooChao/Temp/_tc/writeos-1.0-2/Makefile" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/Downloads/LaTeX_Thesis_Template/中科院/readme.txt" 1971 1 1 nil nil 1180 (overwrite-mode)) ("~/Downloads/LaTeX_Thesis_Template/Hunan_Tech/readme.txt" 3269 2801 1 nil nil 3269 (overwrite-mode)) ("~/Downloads/10.1002%2Flapl.200910023.bib" 1 nil 1 nil nil 1 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/yasnippet-0.6.1c/snippets/text-mode/bibtex-mode/a" 147 23 1 nil nil 147 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/braket.sty" 1 3595 1 nil nil 2178 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/yasnippet-0.6.1c/snippets/text-mode/latex-mode/eqn" 34 1 1 nil nil 36 (overwrite-mode)) ("/Volumes/DATA/Dropbox/.emacs.d/site-lisp/yasnippet-0.6.1c/snippets/text-mode/latex-mode/begin" 147 111 1 nil nil 147 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU_Master_Thesis_template.only/lch-pums-thesis.tex" 8250 7984 1 nil nil 8216 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/.gitignore" 66 445 1 nil nil 66 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/Makefile" 762 745 1 nil nil 762 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/subfigure.sty" 11792 1 1 nil nil 11759 (overwrite-mode)) ("/Volumes/DATA/Library_ToCheckIN/ChaoLU_MAE521_Paper/chao.tex" 2969 387 1 nil nil 387 (overwrite-mode)) ("/Volumes/DATA/Dropbox/Education/PU.Master.Thesis/ch-experiment/usage_options.tex" 1002 nil 1 nil nil 4917 (overwrite-mode))))
(setq-default file-name-history '("/Volumes/DATA/Dropbox/.emacs.d/rc/lch-binding.el" "/Volumes/DATA/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Dropbox/.emacs.d/var/emacs-bmk" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/site-lisp/leisureread/leisureread.txt" "/Volumes/DATA/Dropbox/.emacs.d/rc/leisureread.txt" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-elisp.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/site-lisp/leisureread/leisureread.el" "/Volumes/DATA/Dropbox/.emacs.d/site-lisp/leisureread.el" "/Volumes/DATA/Dropbox/.emacs.d/doc/loochao-emacs-cheat-sheet.tex" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/site-lisp/bookmark+/bookmark+-1.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/site-lisp/flashcard/flashcard.el" "/Volumes/DATA/Dropbox/.emacs.d/site-lisp/flashcard/fc.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-shell.el" "/Volumes/DATA/Dropbox/.emacs.d/site-lisp/bm.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/site-lisp/flashcard/fc.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-python.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/lch-pgm.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-lisp.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-french.el.orig" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-flyspell.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-erc.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-comint.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/newsticker/Makefile" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/ivan/keyring.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-fun.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-org.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-w3m.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-shell.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-muse.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/emacs/init/ivan-load.el" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/bin/setup.py" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.lib/dotEmacs/emacs-expert-kit/Source_lch/bin/setup.sh"))
(setq-default search-ring '("\\cite" "install-el:" "mkin" "install:" "install" "build" "tar" "hist" "C-0" "thesis" "lisp-" "--with" "captur" "g" "dire" "emacs"))
(setq-default regexp-search-ring '("f7" "fc-base" "shell" "outline" "w3m" "M-1" "color" "lch-" "repository-file" "bm.el" "resear" "wy" "char" "f1" "w3m-mode"))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates . extended-command-history) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-file-name anything-c-match-on-directory-name) (type . file)))
(setq-default bookmark-history '("leisureread" "PUFiles" "Research" "REPO" "Dropbox" "EmacsD"))
(setq-default buffer-name-history '("leisureread.el" "leisureread.txt" "lch-elisp.el" "*grep*" "lch-binding.el" "loochao-emacs-cheat-sheet.tex" "fc.el" "site-lisp" "bookmark+-1.el" "bm.el" "*Colors*" "rc" "lch-shell.el" "*Ibuffer*" "lch-pgm.el" "ivan-lisp.el" "ivan-french.el.orig" "init:Source_lch" "ivan-flyspell.el" "ivan-dictionary.el" "*RE-Builder*" "ivan-w3m.el" "lch-web.el" "*shell*" "*w3m*"))
(setq-default coding-system-history '("utf-8" "gbk" "gb18030"))
(setq-default command-history '((switch-to-buffer "leisureread.el") (describe-key (quote [67108903]) 1 nil) (kill-buffer "leisureread.txt") (switch-to-buffer "lch-elisp.el") (kill-buffer "*grep*") (kill-buffer "lch-binding.el") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-.") (kill-buffer "leisureread.el") (switch-to-buffer "loochao-emacs-cheat-sheet.tex") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e leisure") (describe-variable (quote features)) (kill-buffer "fc.el") (kill-buffer "site-lisp") (kill-buffer "bookmark+-1.el") (switch-to-buffer "fc.el") (find-file-at-point "/Volumes/DATA/Dropbox/.emacs.d/site-lisp/flashcard/fc.el") (kill-buffer "bm.el") (switch-to-buffer "bm.el") (kill-buffer "*Colors*") (switch-to-buffer "*Colors*") (kill-buffer "rc") (kill-buffer "lch-shell.el") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e green") (find-file-at-point "/Volumes/DATA/Dropbox/.emacs.d/site-lisp/bm.el") (kill-buffer "*Ibuffer*") (switch-to-buffer "lch-pgm.el") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e outline") (switch-to-buffer "ivan-lisp.el") (kill-buffer "loochao-emacs-cheat-sheet.tex") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e eldoc") (kill-buffer "ivan-french.el.orig")))
(setq-default dired-regexp-history '(".*" "*" ".*LCH.*"))
(setq-default dired-shell-command-history '("firefox" "chmod a-x" "chmod 755" "chmod 644" "gunzip -qc * | tar xvf -"))
(setq-default extended-command-history '("lisp-mode" "customize-face" "el-get-update-all" "el-get-init" "el-get-update" "print-buffer" "pretty-control-l-mode" "find-dired" "eshell"))
(setq-default face-name-history '("default"))
(setq-default find-file-root-history '("~/Dropbox/.emacs.d/rc/lch-org.el" "~/Dropbox/.emacs.d/rc/lch-mac.el" "~/Dropbox/.emacs.d/rc/lch-aquamacs.el"))
(setq-default grep-find-history '("find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-." "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e leisure" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e green" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e outline" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e eldoc" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-o" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e time" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e world" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e ivan-keymap-define" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e f7" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e goto-char" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e last-change" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e M-1" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f6> <f6>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e aqua" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e scroll" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e hippie" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e match-paren" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f7> <f7>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e manfnt.sty" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e spell" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e other-window" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e \\cite" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e figure" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e terminal" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e transient-mark-mode" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e magit" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-x g" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e ffap" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f4> <f4>"))
(setq-default gud-gud-gdb-history '("gdb --fullname hello"))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default hi-lock-regexp-history '("^(global-set-key .*)"))
(setq-default ido-buffer-history '("shee" "fc" "cheat" "sour" "che" "w3m" "bm" "elisp" "lch" "we" "w" "en" "web" "the" "intro" "cpa" "lib" "bib" "bi" "in" "intr" "{org | lch-org.el | *Messages* | *Shell Command Output* | *Compile-Log* | iDD.org}" "sh" "*me" "b" "pe" "int" "pums" "tex" "she"))
(setq-default ido-file-history '(".b" "v" "bm.el" "loochao-emacs-cheat-sheet.tex" "lib" ".em" "ma" "cho" "test.html" "edu" "iDD.org" "l" "eli" "rc/" "_b" "do" "li" "~/" "ev" "set" ".bashrc" "M" "bird2.sh" "pro" ".pro" ".pr" "." ".p" "bas" "etc/"))
(setq-default kmacro-ring '(("" 0 "%d") ([1 tab 35 14 16 32 14] 0 "%d") ([tab 35 32 14] 0 "%d") ("\343-" 0 "%d")))
(setq-default matlab-shell-save-and-go-history '("()"))
(setq-default minibuffer-history '("features" "outline-min" "re-bui" "w3m-nex" "list-colo" "rainbo" "bm-to" "search" "dirtr" "test" "fill" "revert-" "asci" "f" "indent-r" "type" "color-theme-se" "emacs-ver" "exec-path" "ever" "org-v" "print-" "appropriate" "dired" "auto-com" "outline-mi" "lat" "shell" "fl" "out"))
(setq-default org-read-date-history '("+1    " "+5    " "18:00    " "+3 18:00    " "2011-09-02 - 2011-09-04    " "+2 11:30-13:30    " "+2 17:30    " "+2 11:30    " "  2011-07-11    " "   " "+30    " "12:00    " "-1 14:00 +1w    " "+2 18:00    " "+1 18:00    " "+4    " "05-18 16:30    " "05-19 13:30    " "12:00-18:00    "))
(setq-default org-refile-history '(#("IDEA (iDea.org)" 0 4 (fontified nil)) #("ComputerSE" 0 10 (org-category #("TODO-#B" 0 7 ...) face org-level-2 fontified t)) #("IDEA (iDea.org)" 0 4 (face org-level-2 fontified t)) #("OBTAINs" 0 7 (org-category #("TODO-#B" 0 7 ...) face org-level-2 fontified t)) #("IDEAs (iDea.org)" 0 5 (org-category "iDea" face org-level-1 fontified t))))
(setq-default org-tags-history '("OBTAIN" ":#B:Emacs:" "#A"))
(setq-default query-replace-history '("<f1>" "<f2>" "2" "1" "M-2" "M-1" "w3m" "firefox" "Firefox" "ffx" "!f2" "!f1" "fox~" "fox:" "" " in Firefox" "in Firefox" ":" "~" "$" "Shell" "CPP" "Java" "C" "Gdb" "Git"))
(setq-default read-expression-history '("wq"))
(setq-default regexp-history '("^(global-set-key .*)"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("wc" "sed -e 's/smex/test/g' < >" "sed -e 's/smex/test/g'" "pwd"))
(setq-default smex-history '(cd lm 5x5 afm arp dbx dig))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default w3m-input-url-history '("http://www.harvard.edu" "www.princeton.edu" "http://www.princeton.edu" "www.tsinghua.edu.cn" "http://www.emacswiki.org/" "http://www.emacswiki.org/emacs/BookmarkPlus" "http://www.emacswiki.org/cgi-bin/wiki/FlashCard" "http://www.emacswiki.org/emacs/ShellDirtrackByPrompt" "http://www.acoustics.hut.fi/u/mairas/UltimateLatexMakefile/Makefile" "http://www.andy-roberts.net/writing/latex/bibliographies" "http://www.gnu.org/software/emacs/manual/html_node/emacs/Outline-Mode.html#Outline-Mode" "http://www.metalshell.com/source_code/27/Binary_Read_Write.html" "http://www.ibiblio.org/pub/languages/fortran/append-c.html" "http://www.masteringemacs.org/" "http://emacser.com/ann77/Emacs/EmacsElispHistory.html" "http://emacser.com/ann77/Emacs/EmacsDiredOpenFileByType.html" "http://www.newsmth.net/bbsanc.php?path=%2Fgroups%2Fcomp.faq%2FEmacs%2Felisp%2Fpackage%2FM.1151312293.F0" "http://www.cs.cmu.edu/cgi-bin/info2www?%28emacs%29Minor%20Modes" "http://www.emacswiki.org/emacs/ViewMode" "http://www.emacswiki.org/emacs/GraphicalBookmarkJump" "http://web.student.tuwien.ac.at/~e0225855/misc/openwith.el" "http://www.emacswiki.org/emacs/ShellMode" "www.tsinghua.edu" "http://www.emacswiki.org/emacs/SiteMap" "http://www.princeton.edu/~chaol" "http://www.cs.princeton.edu/courses/archive/spr11/cos333/lectures/02langs/" "file:///Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Temporary/xah_emacs_tutorial/emacs/elisp_process_lines.html" "http://freeworld.thc.org/papers/COVER-1.TXT" "http://www.emacswiki.org/emacs/OneKey" "file:///Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Temporary/xah_emacs_tutorial/emacs/emacs_editing_lisp.html"))
(set-register 97 "bd \"C-x f\") 'find-file-at-point)")
