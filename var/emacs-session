;;; Automatically generated on Fri Aug 19 18:29:10 2011
;;; Invoked by LooChao@dynamic-oit-vapornet-c-3363.princeton.edu using 23.3.1
(setq-default kill-ring '(#("(concat org-source-dir \"/public_html\")" 0 1 (fontified t) 1 23 (fontified t face ...) 23 37 (fontified t face ...) 37 38 (fontified t face ...)) #("(find-file (concat org-source-dir \"/Bib-Edu.org\"))" 0 6 (fontified t face #1=...) 6 7 (fontified t face #1#) 7 8 (fontified t face #1#) 8 9 (fontified t face #1#) 9 34 (fontified t face #1#) 34 48 (fontified t face ...) 48 50 (fontified t face ...)) #("(dired (concat org-source-dir \"/public_html\"))" 0 8 (fontified t) 8 30 (fontified t face ...) 30 44 (fontified t face ...) 44 46 (fontified t face ...)) #("
" 0 1 (fontified t)) #("(define-key global-map (kbd \"<f9> c e\") (lambda() (interactive) (find-file (concat org-source-dir \"/Bib-Edu.org\"))))
" 0 28 (fontified t) 28 38 (face font-lock-string-face fontified t) 38 41 (fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 70 (fontified t) 70 71 (face #1=... fontified t) 71 72 (face #1# fontified t) 72 73 (face #1# fontified t) 73 98 (face #1# fontified t) 98 112 (face ... fontified t) 112 115 (face #2=... fontified t) 115 116 (face #2# rear-nonsticky t fontified t) 116 117 (fontified t)) #("(defvar emacs-lib-dir (concat emacs-dir \"/library\"))" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 21 (fontified t face font-lock-variable-name-face) 21 40 (fontified t) 40 50 (fontified t face font-lock-string-face) 50 52 (fontified t)) #("(define-key global-map (kbd \"<f9> b\") (lambda() (interactive) (find-file (concat org-source-dir \"/Bib-Edu.org\"))))" 0 28 (fontified t) 28 36 (fontified t face font-lock-string-face) 36 39 (fontified t) 39 45 (fontified t face font-lock-keyword-face) 45 70 (fontified t) 70 96 (fontified t face ...) 96 110 (fontified t face ...) 110 114 (fontified t face ...)) #("./lch-pgm.el:49:          '((\"\\\\<\\\\(FIXME\\\\)\" 1 'font-lock-fixme-face t)" 0 12 (face ... message #2=... help-echo #1="mouse-2: visit this file, line and column" keymap compilation-button-map mouse-face highlight) 12 13 (message #2# help-echo #1# keymap compilation-button-map mouse-face highlight face ...) 13 15 (face ... message #2# help-echo #1# keymap compilation-button-map mouse-face highlight) 15 16 (message #2# help-echo #1# keymap compilation-button-map mouse-face highlight face ...) 36 41 (font-lock-face match)) #(";>---- Highlight Special Keywords ----<;
;>-- Using Greek Symbol to respresent lambda --<;
(font-lock-add-keywords
 nil ;; 'emacs-lisp-mode
 `((\"\\\\<lambda\\\\>\"
    (0 (progn (compose-region (match-beginning 0) (match-end 0)
                              ,(make-char 'greek-iso8859-7 107))
              nil)))))

;>-- Highlight TODO & FIXME --<;
(make-face 'font-lock-fixme-face)
(make-face 'font-lock-todo-face)
(make-face 'font-lock-lch-face)
(make-face 'font-lock-caution-face)
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-delimiter-face) 42 91 (fontified t face font-lock-comment-face) 91 120 (fontified t) 120 123 (fontified t face font-lock-comment-delimiter-face) 123 140 (fontified t face font-lock-comment-face) 140 144 (fontified t) 144 158 (fontified t face font-lock-string-face) 158 167 (fontified t) 167 172 (fontified t face font-lock-keyword-face) 172 312 (fontified t) 312 313 (fontified t face font-lock-comment-delimiter-face) 313 334 (fontified t face font-lock-comment-face) 334 339 (fontified t face font-lock-fixme-face) 339 345 (fontified t face font-lock-comment-face) 345 412 (fontified t) 412 444 (fontified t) 444 480 (fontified t))))
(setq-default session-file-alist '(("~/Dropbox/.emacs.d/rc/lch-binding.el" 5869 5858 1 nil nil 5869 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-env.el" 2057 2012 1 nil nil 2057 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-pgm.el" 1102 622 1 nil nil 461 (overwrite-mode)) ("~/Temporary/dotfiles/.emacs.d/emacs-init.el" 14851 16139 1 nil nil 14714 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-init.el" 174 126 1 nil nil 174 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-coding.el" 1077 813 1 nil nil 1077 (overwrite-mode)) ("~/Dropbox/Org/org/History.org" 273 755 1 nil nil 37221 (overwrite-mode)) ("~/Dropbox/Org/org/Html.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Humor.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Life.org" 162707 163070 1 nil nil 162707 (overwrite-mode)) ("~/Dropbox/.emacs.d/doc/loochao-emacs-cheat-sheet.tex" 3526 1 1 nil nil 3526 (overwrite-mode)) ("~/Dropbox/Org/org/iPrv.org" 21595 39390 1 nil nil 21253 (overwrite-mode)) ("~/Dropbox/Org/org/Lifetip.org" 2464 2442 1 nil nil 2464 (overwrite-mode)) ("~/Dropbox/Org/org/iPU.org" 8856 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iLog.org" 8743 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iDea.org" 242 1205 1 nil nil 250 (overwrite-mode)) ("~/Dropbox/Org/org/Art-Ent.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/BBall.Team.Reimbursement.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Bib-Edu.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Career.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/ComputerSE.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Cookery.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Culture.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Economy.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/ElectricalSE.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/English.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Fiction.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Library.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Mathematics.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/MechanicalSE.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Methodology.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Miscellaneous.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Movie.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Music.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Opera.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Philosophy.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Physics.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Politics.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Private.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Programming.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Refile.org" 30 nil 1 nil nil 47 (overwrite-mode)) ("~/Dropbox/Org/org/Science.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Sitemap.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Society.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Sociology.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Softip.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Sports.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Travel.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/USLife.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/Unix.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/fashion.stylist.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iCount.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iDD.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iResearch.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iStuff.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iTHU.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/index.org" 1 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Org/org/iPrv.org_archive" 75650 nil 1 nil nil 75829 (overwrite-mode)) ("~/Dropbox/Org/org/Emacs.org" 698 415 1 nil nil 481 (overwrite-mode)) ("~/Dropbox/Org/org/Pearl.org" 196 nil 1 nil nil nil (overwrite-mode)) ("~/Dropbox/Library/Miscellaneous/TXT/Culture/Anthology/冯唐/冯唐_十八岁给我个姑娘.txt" 4064 107591 1 nil nil 4064 (overwrite-mode)) ("~/Dropbox/.emacs.d/rc/lch-elisp.el" 5802 660 1 nil nil 941 (overwrite-mode)) ("/Volumes/Kindle/documents/\313\265\303\367.txt" 3 nil 1 nil nil 3 (overwrite-mode))))
(setq-default file-name-history '("~/Dropbox/.emacs.d/rc/lch-env.el" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/lch-binding.el" "~/Dropbox/.emacs.d/rc/lch-util.el" "~/Dropbox/.emacs.d/rc/lch-pgm.el" "~/.emacs.d/emacs-init.el" "~/Temporary/test" "~/Dropbox/.emacs.d/var/.bm-repository" "~/Dropbox/.emacs.d/rc/lch-aquamacs.el" "~/Dropbox/.emacs.d/rc/lch-coding.el" "~/Temporary/dotfiles/.emacs.d/emacs-init.el" "~/Temporary/dotfiles/.emacs" "~/Dropbox/Library/Library.bib" "~/Dropbox/.emacs.d/doc/loochao-emacs-cheat-sheet.tex" "~/Dropbox/Org/org/iPrv.org_archive" "~/Dropbox/Org/org/index.org" "~/Dropbox/Org/org/iTHU.org" "~/Dropbox/Org/org/iStuff.org" "~/Dropbox/Org/org/iResearch.org" "~/Dropbox/Org/org/iDD.org" "~/Dropbox/Org/org/iCount.org" "~/Dropbox/Org/org/fashion.stylist.org" "~/Dropbox/Org/org/Unix.org" "~/Dropbox/Org/org/USLife.org" "~/Dropbox/Org/org/Travel.org" "~/Dropbox/Org/org/Sports.org" "~/Dropbox/Org/org/Softip.org" "~/Dropbox/Org/org/Sociology.org" "~/Dropbox/Org/org/Society.org" "~/Dropbox/Org/org/Sitemap.org" "~/Dropbox/Org/org/Science.org" "~/Dropbox/Org/org/Refile.org" "~/Dropbox/Org/org/Programming.org" "~/Dropbox/Org/org/Private.org"))
(setq-default search-ring '("\\cite" "install-el:" "mkin" "install:" "install" "build" "tar" "hist" "C-0" "thesis" "lisp-" "--with" "captur" "g" "dire" "emacs"))
(setq-default regexp-search-ring '("f4" "C-z" "histo" "f6" "c-0" "life" "QQ" "refile" "libr" "robert" "Brian.Ke" "pu" "outl" "pp^L-highlight" "pp-" "Volu"))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates . extended-command-history) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-file-name anything-c-match-on-directory-name) (type . file)))
(setq-default bookmark-history '("leisureread" "PUFiles" "Research" "REPO" "Dropbox" "EmacsD"))
(setq-default buffer-name-history '("lch-binding.el" ".emacs.d" "lch-elisp.el" "*Compile-Log*" "Temporary" "emacs-init.el:LooChao" " *Minibuf-1*" "emacs-init.el" "*Backtrace*" "lch-init.el" "*shell*" "*grep*" "lch-coding.el" "lch-aquamacs.el" "lch-env.el" "Emacs.org" "*scratch*" "Library.bib" "Pearl.org" "书摘.dat" "冯唐_十八岁给我个姑娘.note" "冯唐_十八岁给我个姑娘.txt" "CAPTURE-iPrv.org" "CAPTURE-2-iPrv.org"))
(setq-default coding-system-history '("utf-8" "gbk" "gb18030" "nil"))
(setq-default command-history '((switch-to-buffer "lch-binding.el") (kill-buffer ".emacs.d") (switch-to-buffer ".emacs.d") (kill-buffer "lch-elisp.el") (kill-buffer "*Compile-Log*") (switch-to-buffer "*Compile-Log*") (switch-to-buffer "Temporary") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e FIXME") (kill-buffer "emacs-init.el:LooChao") (jump-to-register 69 nil) (kill-buffer " *Minibuf-1*") (switch-to-buffer "emacs-init.el") (open-for-stefan) (kill-buffer "*Backtrace*") (kill-buffer "lch-init.el") (switch-to-buffer "lch-init.el") (kill-buffer "*shell*") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f4> <f4>") (kill-buffer "*grep*") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e terminal") (switch-to-buffer "lch-coding.el") (kill-buffer "lch-aquamacs.el") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-z") (describe-variable (quote inhibit-eol-conversion)) (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e prefer-coding") (switch-to-buffer "lch-env.el") (grep-find "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e utf-8") (kill-buffer "Emacs.org") (switch-to-buffer "Emacs.org") (query-replace-regexp "
+" "

" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (query-replace-regexp "
+" "
" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.))))
(setq-default dired-regexp-history '(".*\\.elc" "*.elc" ".*" "*" ".*LCH.*"))
(setq-default dired-shell-command-history '("firefox" "chmod a-x" "chmod 755" "chmod 644" "gunzip -qc * | tar xvf -"))
(setq-default extended-command-history '("lisp-mode" "customize-face" "el-get-update-all" "el-get-init" "el-get-update" "print-buffer" "pretty-control-l-mode" "find-dired" "eshell"))
(setq-default face-name-history '("default"))
(setq-default find-file-root-history '("~/Dropbox/.emacs.d/rc/lch-org.el" "~/Dropbox/.emacs.d/rc/lch-mac.el" "~/Dropbox/.emacs.d/rc/lch-aquamacs.el"))
(setq-default grep-find-history '("find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e FIXME" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f4> <f4>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e terminal" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-z" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e prefer-coding" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e utf-8" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e face" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e auto-fill" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e fill" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e private" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e Volumes" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e volume" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-o" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e outline" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-." "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e leisure" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e green" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e eldoc" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e time" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e world" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e ivan-keymap-define" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e f7" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e goto-char" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e last-change" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e M-1" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f6> <f6>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e aqua" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e scroll" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e hippie" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e match-paren"))
(setq-default gud-gud-gdb-history '("gdb --fullname hello"))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default hi-lock-regexp-history '("^(global-set-key .*)"))
(setq-default ido-buffer-history '("bi" "*m" "pp-" "*me" "i" "thro" "eli" "elis" "th" "the" "shee" "fc" "cheat" "sour" "che" "w3m" "bm" "elisp" "lch" "we" "w" "en" "web" "intro" "cpa" "lib" "bib" "in" "intr"))
(setq-default ido-file-history '("lib" "wu" "vo" "lch-eli" "elisp_bak.el" "eli" "pu" "org" "lch-outline.el" "l" "edu" "dro" "def" "harpoon.sty" "va" ".b" "v" "bm.el" "loochao-emacs-cheat-sheet.tex" ".em" "ma" "cho" "test.html" "iDD.org" "rc/" "_b" "do" "li" "~/"))
(setq-default kmacro-ring '(("" 0 "%d") ([1 tab 35 14 16 32 14] 0 "%d") ([tab 35 32 14] 0 "%d") ("\343-" 0 "%d")))
(setq-default matlab-shell-save-and-go-history '("()"))
(setq-default minibuffer-history '("open" "open-for" "inhibit-eol-conversion" "lch-pu" "query" "revert-bu" "lisp" "outline-min" "byte" "bookma" "byte-re" "latex" "org-mod" "outline-minor-mode-prefix" "lat" "org-mo" "l" "eval-re" "do" "re" "dos" "uni" "fil" "fill" "\262\311\323\303" "\326\301\323\332" "book" "bookmark-default-file" "features" "re-bui"))
(setq-default org-read-date-history '("+1    " "+5    " "18:00    " "+3 18:00    " "2011-09-02 - 2011-09-04    " "+2 11:30-13:30    " "+2 17:30    " "+2 11:30    " "  2011-07-11    " "   " "+30    " "12:00    " "-1 14:00 +1w    " "+2 18:00    " "+1 18:00    " "+4    " "05-18 16:30    " "05-19 13:30    " "12:00-18:00    "))
(setq-default org-refile-history '(#("IDEA (iDea.org)" 0 4 (fontified nil)) #("ComputerSE" 0 10 (fontified t face org-level-2 org-category #("TODO-#B" 0 7 ...))) #("IDEA (iDea.org)" 0 4 (fontified t face org-level-2)) #("OBTAINs" 0 7 (fontified t face org-level-2 org-category #("TODO-#B" 0 7 ...))) #("IDEAs (iDea.org)" 0 5 (fontified t face org-level-1 org-category "iDea"))))
(setq-default org-tags-history '("OBTAIN" ":#B:Emacs:" "#A"))
(setq-default query-replace-history '("

" "
+" "
" "" "+" "" "有没有一句话让你流泪 - 新浪微博-随时随地分享身边的新鲜事儿 - Firefox" "微博搜索 - 新浪微博-随时随地分享身边的新鲜事儿 - Firefox
" "^ *" "^[ 	]" "^[ \\t]+" "^\\w*" ".*www.txtbbs.com.*$" "http://www.txtbbs.com" "-" "=" " " "p" "<f2>" "o" "<f1>" "outline-minor-mode-map"))
(setq-default read-expression-history '("wq"))
(setq-default regexp-history '("^(global-set-key .*)"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("wc" "sed -e 's/smex/test/g' < >" "sed -e 's/smex/test/g'" "pwd"))
(setq-default smex-history '(cd lm 5x5 afm arp dbx dig))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default w3m-input-url-history '("http://www.emacswiki.org/emacs/OutlineMinorMode" "http://www.harvard.edu" "www.princeton.edu" "http://www.princeton.edu" "www.tsinghua.edu.cn" "http://www.emacswiki.org/" "http://www.emacswiki.org/emacs/BookmarkPlus" "http://www.emacswiki.org/cgi-bin/wiki/FlashCard" "http://www.emacswiki.org/emacs/ShellDirtrackByPrompt" "http://www.acoustics.hut.fi/u/mairas/UltimateLatexMakefile/Makefile" "http://www.andy-roberts.net/writing/latex/bibliographies" "http://www.gnu.org/software/emacs/manual/html_node/emacs/Outline-Mode.html#Outline-Mode" "http://www.metalshell.com/source_code/27/Binary_Read_Write.html" "http://www.ibiblio.org/pub/languages/fortran/append-c.html" "http://www.masteringemacs.org/" "http://emacser.com/ann77/Emacs/EmacsElispHistory.html" "http://emacser.com/ann77/Emacs/EmacsDiredOpenFileByType.html" "http://www.newsmth.net/bbsanc.php?path=%2Fgroups%2Fcomp.faq%2FEmacs%2Felisp%2Fpackage%2FM.1151312293.F0" "http://www.cs.cmu.edu/cgi-bin/info2www?%28emacs%29Minor%20Modes" "http://www.emacswiki.org/emacs/ViewMode" "http://www.emacswiki.org/emacs/GraphicalBookmarkJump" "http://web.student.tuwien.ac.at/~e0225855/misc/openwith.el" "http://www.emacswiki.org/emacs/ShellMode" "www.tsinghua.edu" "http://www.emacswiki.org/emacs/SiteMap" "http://www.princeton.edu/~chaol" "http://www.cs.princeton.edu/courses/archive/spr11/cos333/lectures/02langs/" "file:///Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Temporary/xah_emacs_tutorial/emacs/elisp_process_lines.html" "http://freeworld.thc.org/papers/COVER-1.TXT" "http://www.emacswiki.org/emacs/OneKey"))
(set-register 97 "bd \"C-x f\") 'find-file-at-point)")
