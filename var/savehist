;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(grep-find-history viper-ex-history woman-topic-history query-replace-history face-name-history buffer-name-history minibuffer-history input-method-history file-name-history gud-gdb-history extended-command-history ido-buffer-history ido-file-history))
(setq grep-find-history '("find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e info-default-directory-list" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e info" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e princeton" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e gamma" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e flyspell" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e LCH" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e XXX" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e warning" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e error" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e one-key" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e shell" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e list-bookmarks" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e f4" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f6>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f7>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f7> <f7>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e undo" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f2> <f2>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e newline-and" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e \"C-x f\"" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-x f" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e ywb-fav" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e C-c w" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e global" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e outline-minor" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e previous-buffer" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e recentf-mode" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e echo-keystroke" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e saveplace" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e inher"))
(setq viper-ex-history '("help" "q" "exit"))
(setq query-replace-history '("" " (video x-flv)" "Chinese_Opera_Yueju_" " Chinese_Opera_Yueju_" "integrator" "duffing" "duffing integrator" "duffing->x_prev" "x_bak" "1" "0" "->dt" "_dt" "x" "integrator->x" "integrator->n" "step" "org-export" "emms" "skeleton" "<f7>" "<f5>" "<f2> s" "<f5" "^$" "</td>" "<img .*></td>"))
(setq face-name-history '("default"))
(setq buffer-name-history '("LooChao/rc" "*w3m*<3>" "*w3m*<2>" "*w3m*" "*Ibuffer*" "lch-init.el" "*scratch*" "dotEmacs" "LooChao/rc" "*info*" "*Backtrace*" "*Messages*" "lch-conf.el" "info" ".emacs.d" "DATA/rc" "viper-sample" "README.md" "exaos.github.com" "glyphicons-halflings.png" "glyphicons-halflings-white.png" "favicon.ico" "rc" "example" "LooChao" "sample.org" "PopFN" "*shell*"))
(setq minibuffer-history '("Info-directory-list" "info" "inf" "Info-default-directory-list" "append" "lisp-m" "viper" "woman" "wom" "org-publish-bl" "esh" "shell" "org-mode" "calen" "dired" "org" "c" "jd" "644" "32" "39" "33" "print" "55" "21" "markdo" "w" "widen"))
(setq file-name-history '("~/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Repository/git/aquamacs-emacs/info/viper" "~/Dropbox/.emacs.d/rc/lch-conf.el" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/rc/lch-init.el" "~/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Repository/git/aquamacs-emacs/info/viper" "~/Dropbox/.emacs.d/rc/lch-conf.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/lch-init.el" "~/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Repository/git/aquamacs-emacs/info/viper" "~/Dropbox/.emacs.d/rc/lch-conf.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/lch-init.el" "~/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Repository/git/aquamacs-emacs/info/viper" "~/Dropbox/.emacs.d/rc/lch-conf.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/lch-init.el" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Repository/git/aquamacs-emacs/info/viper" "~/Dropbox/.emacs.d/rc/lch-conf.el" "~/Dropbox/.emacs.d/rc/lch-init.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Repository/git/aquamacs-emacs/info/viper" "~/Dropbox/.emacs.d/rc/lch-conf.el" "~/Dropbox/.emacs.d/rc/lch-init.el" "/Volumes/DATA/Dropbox/.emacs.d/rc/dotEmacs" "~/.emacs" "~/Dropbox/.emacs.d/rc/lch-conf.el" "~/Dropbox/.emacs.d/rc/lch-init.el" "/Volumes/DATA/Repository/git/aquamacs-emacs/info/viper" "~/Dropbox/.emacs.d/var/.bm-repository" "~/Dropbox/.emacs.d/var/.bm-repository" "~/Dropbox/.emacs.d/var/emms/emms-history" "/Users/LooChao/.#dotViper" "/Users/LooChao/dotViper" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/sample.org" "/Volumes/DATA/Temperary/el-orgsite/notes/lang.org" "/Volumes/DATA/Temperary/el-orgsite/notes/" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/font/Andika.woff" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/bootstrap/less/accordion.less" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/bootstrap/js/bootstrap-alert.js" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/bootstrap/js/bootstrap-affix.js" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/bootstrap/img/glyphicons-halflings.png" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/bootstrap/img/glyphicons-halflings-white.png" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/js/jquery-1.7.1.min.js" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/out/index.xml" "/Volumes/DATA/Temperary/exaos.github.com/favicon.ico" "/Volumes/DATA/Temperary/exaos.github.com/README.md" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/emacs-logo.png" "~/Dropbox/.emacs.d/site-lisp/o-blog/example/sample.org" "~/Dropbox/.emacs.d/var/.bm-repository" "/Volumes/DATA/Temperary/exaos.github.com/style/js/jquery-1.7.1.min.js" "/Volumes/DATA/Temperary/exaos.github.com/style/js/less-1.3.0.min.js" "/Volumes/DATA/Temperary/exaos.github.com/style/js/prettify.js" "/Volumes/DATA/Temperary/exaos.github.com/style/less/font-Andika.less" "/Volumes/DATA/Temperary/exaos.github.com/tags/295bb704f5205801d57d672780b94117.html" "/Volumes/DATA/Temperary/el-orgsite/notes/lang.org" "/Volumes/DATA/Temperary/el-orgsite/setup.org" "/Volumes/DATA/Temperary/el-orgsite/orgrc.el" "/Volumes/DATA/Temperary/el-orgsite/gh-blog.org" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "/Volumes/DATA/Temperary/o-blog/o-blog-alert.el"))
(setq gud-gdb-history '("gdb --annotate=3 duffing_ab2"))
(setq extended-command-history '("eshell"))
(setq ido-buffer-history '("*w3m*<3>" "*w3m*<2>" "*w3m*" "*Ibuffer*" "lch-init.el" "*scratch*" "dotEmacs" "LooChao/rc" "*m" "do" "in" "*me" "duffing.c" "e" "ass" "d" "du" "*s" "eu" "int" "ut" "lch-s" "v" "stu" "id" "b" "pe" "m" "web"))
(setq ido-file-history '("dotViper" "dotV" "d" "DA" "Vo" "/V" "Documents/" "main.cpp" "main.c" "ab2" "ab2_bak.c" "plot.m" "euler.c" "Makefile" "README" "duffing.c" "duf" "lch-special-words.el" "lch-spec" "integrator.h" "lch-one-key.el" "students_bak.html" "stu" "test.html" "nc.el" "青" "Down" "pas" "pri"))
(setq regexp-search-ring '("emacs-dir" "info" "lch-ini" "o-b" "flv" "down" "humor" "Ctrl" "goto-line" "imag" "chriss" "mailto:c" "stu" "Volu" "rhs" "lif"))
